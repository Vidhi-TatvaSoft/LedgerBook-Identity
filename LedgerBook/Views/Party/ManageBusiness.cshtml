@using DataAccessLayer.ViewModels;
@model PartyTransactionViewModel;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "View Business";
}
<!-------------------- /customer details-------------------------------->
<div class="col-6  party-list border shadow p-0">
    <div class="row  border mx-0 p-3" id="total-amount-id">

    </div>

    <div class="row border mx-0 p-3">
        <div class="d-flex flex-column col-xl-4 col-md-12">
            <div class="fs-5 text-secondary ">Search For @Model.PartyTypeString</div>
            <div class=""><input type="text" id="partySearch" class="form-control text-dark"
                    style="height:35px; width:100% !important;" placeholder="Search" />
            </div>
        </div>
        <div class="d-flex flex-column col-xl-4 col-md-6">
            <div class="fs-5 text-secondary ">Filter By</div>
            <div class="">
                <select name="" id="filterParty" class=" form-control">
                    <option value="-1">Select </option>
                    <option value="All">All</option>
                    <option value="Give">You'll Give</option>
                    <option value="Get">You'll Get</option>
                    <option value="Settled">Settled</option>
                </select>
            </div>

        </div>
        <div class="d-flex flex-column col-xl-4 col-md-6">
            <div class="fs-5 text-secondary ">Sort By</div>
            <div class="">
                <select name="" id="sortParty" class="form-control">
                    <option value="-1">Select</option>
                    <option value="mostRecent">Most Recent</option>
                    <option value="HighestAmount">Highest Amount</option>
                    <option value="LeastAmount">Least Amount</option>
                    <option value="ByName">By Name</option>
                    <option value="Oldest">Oldest</option>
                </select>
            </div>
        </div>
    </div>
    <input type="hidden" id="businessId" asp-for="@Model.BusinessId">
    <input type="hidden" id="businessName" asp-for="@Model.BusinessName">
    <input type="hidden" id="partyType" asp-for="@Model.PartyTypeString">

    <div class="d-flex justify-content-between bg-light border mx-0 p-1 px-3">
        <div class="text-secondary fw-bold">Name</div>
        <div class="text-secondary fw-bold">Amount</div>
    </div>

    <div id="partyList-partial" class="party-list-scroll">

    </div>

    <div class="d-flex justify-content-center p-3 w-100">
        <div class="btn d-flex btn-primary add-party-button" data-bs-toggle="modal" data-bs-target="#party-modal"
            onclick="displayPartyModal()"><i class="fa-solid fa-plus mt-1"></i>&nbsp; &nbsp; Add @Model.PartyTypeString
        </div>
    </div>
    <input type="hidden" id="businessName">


</div>

<!------------------- transaction details-------------------------------->
<div class="col-6 party-list p-0" id="displaySelectedParty">
    <div class="d-flex flex-column justify-content-center align-items-center h-100">
        <div><img src="~/images/users.png" alt="" height="150px"></div>
        <div class="fs-4 text-secondary">No Party
            Selected</div>
    </div>
</div>




<!------------------------------------------------- modal ------------------------------------------>
<div id="party-modal" class="modal fade" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered " id="party-modal-content">

    </div>
</div>

<div id="settleup-modal" class="modal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="add-user-modal-title">Settled up confirmation</h5>
                <button type="button" class="btn-close user-delete-modal-close-btn" data-bs-dismiss="modal"
                    aria-label="Close"></button>
            </div>
            <div class="modal-body ">
                <div class="delete-cat-image d-flex flex-column  align-items-center">
                    <p>Are you sure you want to settle up party transaction?</p>
                    <input type="hidden" id="partyId-settleup">
                    <input type="hidden" id="netBalance-settleup">
                </div>
            </div>
            <div class="modal-footer d-flex justify-content-center">
                <a type="submit" class="btn btn-primary" onclick="SettleUp()">Yes</a>
                <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>




@section Scripts {
    <script>
        @* let filter = $("#filterParty").val();
        let sort = $("#sortParty").val(); *@
            function displayTotalAmounts() {
                $.ajax({
                    url: "/Party/GetTotalAmount",
                    type: "GET",
                    success: function (response) {
                        HandleResponse(response, "#total-amount-id")
                    }
                })
            }

        //debounce function for search business
        function debounce(func, delay) {
            let timeoutId; // Variable to store the timer ID

            return function (...args) {
                clearTimeout(timeoutId);

                timeoutId = setTimeout(() => {
                    func.apply(this, args);
                }, delay);
            };
        }

        const handleSearch = (event) => {
            let searchText = event.target.value;
            displayPartyList(searchText, filter, sort)
        };

        const debouncedSearch = debounce(handleSearch, 500);
        const searchInput = document.getElementById('partySearch');
        searchInput.addEventListener('input', debouncedSearch);

        //to displat list off all parties by partytype
        function displayPartyList(searchText = "", filter, sort) {
            let partyType = $("#partyType").val();
            $.ajax({
                url: "/Party/GetAllParties",
                type: "GET",
                data: { partyType, searchText, filter, sort },
                success: function (response) {
                    $("#partyList-partial").html(response);
                }
            })
            displayTotalAmounts();
        }

        function RemoveWhiteSpace(input) {
            let value = input.value;

            value = value.replace(/\s/g, '');
            if (!value) {
                input.value = value;
            }
        }

    </script>

    <script>

        //party add edit modal display
        function displayPartyModal() {
            let businessId = $("#businessId").val();
            $.ajax({
                url: "/Party/RenderPartyModal",
                type: "GET",
                data: { businessId },
                success: function (response) {
                    $("#party-modal-content").html(response)
                    var partyType = document.getElementsByClassName("sidebar-active-div")[0].children[2].innerHTML;
                    console.log(partyType)
                    if (partyType == "Customers") {
                        $("#customer-radio").prop("checked", true);
                    } else {
                        $("#supplier-radio").prop("checked", true);
                    }
                }
            })
        }

        //to display details and entries of selected party
        function displaySelectedParyDetails(partyId) {
            $.ajax({
                url: "/Party/DisplayPartyTransactionDetails",
                type: "GET",
                data: { partyId },
                success: function (response) {
                    $("#displaySelectedParty").html(response);
                    displayTransactionEntries(partyId);
                   

                }
            })
            let parties = document.getElementsByClassName("party-list-div");
            for (i = 0; i < parties.length; i++) {
                parties[i].classList.remove("selected-party")
            }
            setTimeout(function () {
                document.getElementById(`party-id-${partyId}`).classList.add("selected-party");
            }, 500);
        }

        //Display transaction entries when party selected
        function displayTransactionEntries(partyId) {
            $.ajax({
                url: "/Party/DisplyTransationEntries",
                type: "GET",
                data: { partyId },
                success: function (response) {
                    $("#transaction-entries-id").html(response);
                }
            })
        }

        //update party modal display
        function updateParty(partyId) {
            $.ajax({
                url: "/Party/RenderUpdatePartyModal",
                type: "GET",
                data: { partyId },
                success: function (response) {
                    $("#party-modal-content").html(response);
                    let partyType = $("#party-type-string").val();
                    if (partyType == "Customer") {
                        $("#customer-radio").prop("checked", true);
                    } else {
                        $("#supplier-radio").prop("checked", true);
                    }
                    $("#party-amount").prop("disabled", true);
                    $("#party-transactionType").prop("disabled", true)
                }
            })
        }

        //display save transaction entry modal partial
        function displayAddTransactionModal(partyId, transactionType) {
            $.ajax({
                url: "/Party/RenderSaveTransactionEntryModal",
                type: "GET",
                data: { partyId, transactionType },
                success: function (response) {
                    $("#transaction-modal-content").html(response);

                }
            })
        }

        //display edit transaction modal
        function displayUpdateTransactionModal(transactionId) {
            $.ajax({
                url: "/Party/RenderSaveTransactionEntryModal",
                type: "GET",
                data: { transactionId },
                success: function (response) {
                    $("#transaction-modal-content").html(response);

                }
            })
        }

        //function to set transactionid in delete transaction modal
        function deleteTransactionId(transactionId) {
            document.getElementById("transactionId").value = transactionId;

        }

        //delete transaction ajax
        function deleteTransaction() {
            let transactionId = document.getElementById("transactionId").value;
            $.ajax({
                url: "/Party/DeleteTransaction",
                type: "GET",
                data: { transactionId },
                success: function (response) {
                    if (response.success) {
                        Toaster(response.message);
                        $('.btn-close').click();
                        displayPartyList();
                        displaySelectedParyDetails(response.partyId)

                    } else {
                        Toaster(response.message, "error");
                        $('.btn-close').click();
                        displayPartyList();
                        displaySelectedParyDetails(response.partyId)
                    }
                }
            })
        }

        //send reminder to party through email
        function SendReminder(netBalance, partyId) {
            console.log(netBalance, " ", partyId)
            $.ajax({
                url: "/Party/SendReminderToParty",
                type: "POST",
                data: { netBalance: netBalance, partyId: partyId },
                success: function (response) {
                    if (response.success) {
                        Toaster(response.message);
                    }
                }
            })
        }

        //display modal fro settleup
        function SettleUpModal(netBalance, partyId) {
            console.log(netBalance,partyId)
            $("#partyId-settleup").val(partyId);
            $("#netBalance-settleup").val(netBalance);

        }

        //settle up for party
        function SettleUp() {
            let netBalance = $("#netBalance-settleup").val();
            let partyId = $("#partyId-settleup").val();
            console.log(netBalance,partyId)
            $.ajax({
                url: "/Party/SettleUpParty",
                type: "POST",
                data: { netBalance: netBalance, partyId: partyId },
                success: function (response) {
                    if (response.success) {
                        Toaster(response.message);
                    }
                    $('.btn-close').click();
                    displayPartyList();
                    displaySelectedParyDetails(response.partyId)
                }
            })
        }
    </script>

    <script>

        $(document).ready(function () {
            displayPartyList();
            let searchText = $("#partySearch").val();
            let filter = $("#filterParty").val();
            let sort = $("#sortParty").val();


            //party add edit submit event
            $(document).on("submit", "#party-manage-form", function (e) {
                e.preventDefault();

            })

            //Add new transaction entry
            $(document).on("submit", "#save-transaction-entry-modal-form", function (e) {
                e.preventDefault();
                let form = $("#save-transaction-entry-modal-form")
                if (form.valid()) {
                    let formElement = document.getElementById("save-transaction-entry-modal-form");
                    let formData = new FormData(formElement);

                    $.ajax({
                        url: "/Party/SaveTransactionEntry",
                        type: "POST",
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (response) {
                            HandleResponse(response, "#transaction-modal-content");
                            displayPartyList();
                            let partyId = document.getElementById("party-id-hidden").value;
                            displaySelectedParyDetails(parseInt(partyId))
                            $(".btn-close").click();
                        }
                    })
                }
            })

            $(document).on("keyup", "#partySearch", function () {
                searchText = $(this).val().trim();
                displayPartyList(searchText, filter, sort)
            })

            $(document).on("change", "#filterParty", function () {
                filter = $(this).val();
                displayPartyList(searchText, filter, sort)
            })

            $(document).on("change", "#sortParty", function () {
                sort = $(this).val();
                displayPartyList(searchText, filter, sort)
            })

        })
    </script>

    <!--------------Save & Close ------------------->
    <script>
        //save party without close
        function saveParty() {
            let form = $("#party-manage-form");
            if (form.valid()) {
                let formElement = document.getElementById("party-manage-form");
                let formData = new FormData(formElement);

                if ($("#customer-radio").prop("checked")) {
                    formData.append("partyTypeString", "Customer");
                } else {
                    formData.append("partyTypeString", "Supplier");
                }
                $.ajax({
                    url: "/Party/SaveParty",
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (response) {
                        HandleResponse(response, "#party-modal-content")
                        displayPartyList();
                        let partyId = document.getElementById("party-id-hidden").value;
                        if (partyId != 0) {
                            let partyType = document.getElementById("party-type-string").value;
                            if (partyType == "Customer") {
                                $("#customer-radio").prop("checked", true);
                            } else if (partyType == "Supplier") {
                                $("#supplier-radio").prop("checked", true);
                            }
                        }
                        displaySelectedParyDetails(partyId)
                    }
                })
            }
        }

        function saveAndCloseParty() {
            let form = $("#party-manage-form");
            if (form.valid()) {
                let formElement = document.getElementById("party-manage-form");
                let formData = new FormData(formElement);

                if ($("#customer-radio").prop("checked")) {
                    formData.append("partyTypeString", "Customer");
                } else {
                    formData.append("partyTypeString", "Supplier");
                }
                $.ajax({
                    url: "/Party/SaveParty",
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (response) {
                        HandleResponse(response, "#party-modal-content");
                        let partyId = document.getElementById("party-id-hidden").value;
                        $(".btn-close").click();
                        displayPartyList();
                        displaySelectedParyDetails(parseInt(partyId))
                    }
                })
            }
        }


    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <partial name="_Toaster" />
}